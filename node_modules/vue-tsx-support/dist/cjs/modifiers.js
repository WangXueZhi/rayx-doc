"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.modifiers = void 0;
function handleEvent(event, filters, handler) {
    for (var _i = 0, filters_1 = filters; _i < filters_1.length; _i++) {
        var filter = filters_1[_i];
        if (!filter(event)) {
            return;
        }
    }
    if (handler) {
        handler(event);
    }
}
var keyCodes = {
    esc: 27,
    tab: 9,
    enter: 13,
    space: 32,
    up: 38,
    down: 40,
    del: [8, 46],
    left: 37,
    right: 39
};
function createKeyFilter(keys) {
    var codes = [];
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        if (typeof key === "number") {
            codes.push(key);
        }
        else {
            var code = keyCodes[key];
            if (typeof code === "number") {
                codes.push(code);
            }
            else {
                codes.push.apply(codes, code);
            }
        }
    }
    switch (codes.length) {
        case 0:
            return function (_) { return false; };
        case 1:
            var code_1 = codes[0];
            return function (e) { return e.keyCode === code_1; };
        default:
            return function (e) { return codes.indexOf(e.keyCode) >= 0; };
    }
}
function defineChildModifier(target, currentFilters, name, filter, children) {
    Object.defineProperty(target, name, {
        get: function () {
            // call this getter at most once.
            // reuse created instance after next time.
            var ret = createModifier(__spreadArrays(currentFilters, [filter]), children);
            Object.defineProperty(target, name, {
                value: ret,
                enumerable: true
            });
            return ret;
        },
        enumerable: true,
        configurable: true
    });
}
function defineKeyCodeModifiers(target, filters, children) {
    var _loop_1 = function (name_1) {
        var keyName = name_1;
        if (keyName === "left" || keyName === "right") {
            return "continue";
        }
        var code = keyCodes[keyName];
        if (typeof code === "number") {
            defineChildModifier(target, filters, keyName, function (e) { return e.keyCode === code; }, children);
        }
        else {
            var c1_1 = code[0], c2_1 = code[1];
            defineChildModifier(target, filters, keyName, function (e) { return e.keyCode === c1_1 || e.keyCode === c2_1; }, children);
        }
    };
    for (var name_1 in keyCodes) {
        _loop_1(name_1);
    }
}
function defineKeys(target, filters, children) {
    Object.defineProperty(target, "keys", {
        get: function () {
            var _this = this;
            var keysFunction = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var propName = "keys:" + args.toString();
                var modifier = _this[propName];
                if (modifier !== undefined) {
                    return modifier;
                }
                var filter = createKeyFilter(args);
                defineChildModifier(_this, filters, propName, filter, children);
                return _this[propName];
            };
            Object.defineProperty(this, "keys", {
                value: keysFunction,
                enumerable: true
            });
            return keysFunction;
        },
        enumerable: true,
        configurable: true
    });
}
function defineExact(target, filters, children) {
    Object.defineProperty(target, "exact", {
        get: function () {
            var _this = this;
            var exactFunction = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var propName = "exact:" + args.toString();
                var modifier = _this[propName];
                if (modifier !== undefined) {
                    return modifier;
                }
                var expected = {
                    ctrl: false,
                    shift: false,
                    alt: false,
                    meta: false
                };
                args.forEach(function (arg) { return (expected[arg] = true); });
                var filter = function (e) {
                    return !!e.ctrlKey === expected.ctrl &&
                        !!e.shiftKey === expected.shift &&
                        !!e.altKey === expected.alt &&
                        !!e.metaKey === expected.meta;
                };
                defineChildModifier(_this, filters, propName, filter, children);
                return _this[propName];
            };
            Object.defineProperty(this, "exact", {
                value: exactFunction,
                enumerable: true
            });
            return exactFunction;
        },
        enumerable: true,
        configurable: true
    });
}
function createModifier(filters, children) {
    function m(arg) {
        if (arg instanceof Function) {
            // EventHandler => EventHandler
            return function (event) { return handleEvent(event, filters, arg); };
        }
        else {
            // Event => void
            handleEvent(arg, filters);
            return;
        }
    }
    if (children.keyboard || children.mouse) {
        var nextChildren = __assign(__assign({}, children), { keyboard: false, mouse: false });
        if (children.keyboard) {
            defineKeyCodeModifiers(m, filters, nextChildren);
            defineKeys(m, filters, nextChildren);
        }
        if (children.mouse) {
            defineChildModifier(m, filters, "middle", function (e) { return e.button === 1; }, nextChildren);
        }
        defineChildModifier(m, filters, "left", function (e) { return e.keyCode === 37 || e.button === 0; }, nextChildren);
        defineChildModifier(m, filters, "right", function (e) { return e.keyCode === 39 || e.button === 2; }, nextChildren);
    }
    if (children.exact) {
        var nextChildren = __assign(__assign({}, children), { exact: false, modkey: false });
        defineExact(m, filters, nextChildren);
    }
    if (children.modkey) {
        var nextChildren = __assign(__assign({}, children), { exact: false });
        defineChildModifier(m, filters, "ctrl", function (e) { return e.ctrlKey; }, nextChildren);
        defineChildModifier(m, filters, "shift", function (e) { return e.shiftKey; }, nextChildren);
        defineChildModifier(m, filters, "alt", function (e) { return e.altKey; }, nextChildren);
        defineChildModifier(m, filters, "meta", function (e) { return e.metaKey; }, nextChildren);
        defineChildModifier(m, filters, "noctrl", function (e) { return !e.ctrlKey; }, nextChildren);
        defineChildModifier(m, filters, "noshift", function (e) { return !e.shiftKey; }, nextChildren);
        defineChildModifier(m, filters, "noalt", function (e) { return !e.altKey; }, nextChildren);
        defineChildModifier(m, filters, "nometa", function (e) { return !e.metaKey; }, nextChildren);
    }
    defineChildModifier(m, filters, "stop", function (e) {
        e.stopPropagation();
        return true;
    }, children);
    defineChildModifier(m, filters, "prevent", function (e) {
        e.preventDefault();
        return true;
    }, children);
    defineChildModifier(m, filters, "self", function (e) { return e.target === e.currentTarget; }, children);
    return m;
}
exports.modifiers = createModifier([], {
    keyboard: true,
    mouse: true,
    modkey: true,
    exact: true
});
//# sourceMappingURL=data:application/json;base64,